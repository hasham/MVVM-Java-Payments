plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.mvvmpayments"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    buildTypes {
        debug {

        }

        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    project.ext { appName = 'Weather' }
                    def formattedDate = new Date().format('ddMMMyyyy_hhmm')
                    def newName = outputFileName
                    newName = newName.replace("app-", "$project.ext.appName-")
                    newName = newName.replace("-release", "-release" + formattedDate)
                    //noinspection GroovyAssignabilityCheck
                    outputFileName = new File(outputFileName, newName)
                }
            }

        }
    }
    flavorDimensions "default"

    productFlavors {
        dev {
            versionCode 1
            versionName "1.0"
            applicationId "com.example.mvvmpaymentsdev"
            dimension "default"
            buildConfigField 'String', 'API_HOST','"https://raw.githubusercontent.com/"'
        }
        staging {
            versionCode 1
            versionName "1.0"
            applicationId "com.example.mvvmpaymentsstaging"
            dimension "default"
            buildConfigField 'String', 'API_HOST','"https://raw.githubusercontent.com/"'
        }
        production {
            versionCode 1
            versionName "1.0"
            applicationId "com.example.mvvmpayments"
            dimension "default"
            buildConfigField 'String', 'API_HOST','"https://raw.githubusercontent.com/"'
        }
    }
    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.flavors[0].name == 'mock') {
            variant.ignore = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        dataBinding true
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation  'org.mockito:mockito-core:1.10.19'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // REST API client
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    implementation "com.squareup.okio:okio:2.7.0"
    implementation "com.squareup.okhttp3:okhttp:4.8.1"
    implementation "com.squareup.okhttp3:logging-interceptor:4.8.1"
    implementation "com.squareup.retrofit2:retrofit:2.9.0"

    // Dagger dependency injection
    implementation "com.google.dagger:dagger:2.27"
    annotationProcessor  "com.google.dagger:dagger-compiler:2.11"
    annotationProcessor  "com.google.dagger:dagger-android-processor:2.11"
    implementation "com.google.dagger:dagger-android-support:2.11"

    // Image Loading
    implementation ("com.github.bumptech.glide:glide:4.12.0@aar") {
        transitive = true
    }
    annotationProcessor  'com.github.bumptech.glide:compiler:4.11.0'

    // Android Room
    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
}